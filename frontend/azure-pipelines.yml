trigger:
  branches:
    include:
      - test_docker

  paths:
    include:
      - frontend/*

variables:
  imageRepository1: 'invent_nginx'
  dockerfilePath1: './Dockerfile.nginx'
  imageRepository2: 'invent_frontend'
  dockerfilePath2: './Dockerfile.frontend'
  containerRegistry: 'uniinventacrdev.azurecr.io'
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'uniinventacrdev'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  kubernetesCluster: 'uni-apps-aks-invent-dev'
  kubernetesServiceConnection: 'INVENT-DEV-uni-apps-aks-invent-dev-invent-dev-1662392151258'
  namespace: 'invent-dev'
  ${{ if endsWith( variables['Build.SourceBranchName'], 'test_docker' ) }}:
    envtag: 'thisisatestag'
  ${{ else }}:
    envtag: 'anothertesttag'



stages:

  - stage: Build_Docker 
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build job
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "TAG IS $(envtag)"
            displayName: 'Display tag'
          - task: DownloadSecureFile@1
            displayName: Download .env file
            inputs:
              secureFile: '.env' 
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Agent.TempDirectory)'
              Contents: .env
              TargetFolder: ./frontend            
#          - task: Docker@2
#            displayName: Build and push Nginx image to container registry
#            inputs:
#              command: buildAndPush
#              repository: $(imageRepository1)
#              dockerfile: $(dockerfilePath1)
#              containerRegistry: $(dockerRegistryServiceConnection)
#              tags: |
#                $(tag)
#                latest
          - task: Docker@2
            displayName: Build and push Frontend image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository2)
              dockerfile: $(dockerfilePath2)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
#          - task: HelmDeploy@0
#            displayName: Helm deploy Frontend
#            inputs:
#              connectionType: 'Kubernetes Service Connection'
#              kubernetesServiceConnection: $(kubernetesServiceConnection)
#              namespace: $(namespace)
#              command: upgrade
#              chartType: filepath
#              chartPath: frontend/helm
#              releaseName: invent-frontend
#              install: true
#              waitForExecution: false
#              overrideValues: |
#                environment='development'