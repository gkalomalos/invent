trigger:
  branches:
    include:
      - test_docker
      - feature/*
      - release/*
  paths:
    include:
      - django/*
      - Dockerfile.django

variables:
  imageRepository: 'invent_django'
  containerRegistry: 'uniinventacrdev.azurecr.io'
  dockerfilePath: 'Dockerfile.django'
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'uniinventacrdev'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  kubernetesCluster: 'uni-apps-aks-invent-dev'
  kubernetesServiceConnection: 'INVENT-DEV-uni-apps-aks-invent-dev-invent-dev-1662392151258'
  namespace: 'invent-dev'
  ${{ if contains( variables['Build.SourceBranchName'], 'test' ) }}:
    envtag: 'thisisatestag'
  ${{ else }}:
    envtag: 'anothertesttag'



stages:

  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build job
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              command: 'login'

          - script: "docker pull $(containerRegistry)/$(imageRepository):latest"
            displayName: Pull latest for layer caching
            continueOnError: true # for first build, no cache
          - script: |
              echo "TAG IS $(envtag)"
            displayName: 'Display tag'
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              arguments: '--cache-from=$(containerRegistry)/$(imageRepository):latest'
              tags: |
                $(tag)
                latest

          - task: HelmDeploy@0
            displayName: Helm deploy django
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: $(namespace)
              command: upgrade
              chartType: filepath
              chartPath: django/helm
              releaseName: invent-django
              install: true
              waitForExecution: false
              overrideValues: |
                environment='development'