trigger:
  branches:
    include:
      - test_docker
      - feature/*
      - release/*
  paths:
    include:
      - django/*
      - Dockerfile.django

variables:
  imageRepository: 'invent_django'
  containerRegistry: 'uniinventacrdev.azurecr.io'
  dockerfilePath: 'Dockerfile.django'
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'uniinventacrdev'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  kubernetesCluster: 'uni-apps-aks-invent-dev'
  kubernetesServiceConnection: 'INVENT-DEV-uni-apps-aks-invent-dev-invent-dev-1662392151258'
  namespace: 'invent-dev'
  branchNameFixed: $[replace(variables['Build.SourceBranchName'], '_', '-')]
  ${{ if contains( variables['Build.SourceBranch'], 'feature/' ) }}:
    lifecycle: 'managed'
  ${{ else }}:
    lifecycle: 'temporary'

stages:

  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build job
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: DownloadSecureFile@1
            inputs:
              secureFile: 'django.env.*'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Agent.TempDirectory)'
              Contents: '**'
              TargetFolder: django/
            displayName: 'Copy .env files to django folder'
          - script: |
              ls -al django/
            displayName: 'See contents of repo'
          - script: |
              echo "BRANCH FULL IS $(branchName)"
              echo "BRANCH IS $(Build.SourceBranchName)"
              echo $(branchNameFixed)
              echo $(lifecycle)
            displayName: 'Display tag'
          - script: |
              echo $(branchNameFixed)
            displayName: 'echo $(branchNameFixed)'
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
          - task: HelmDeploy@0
            displayName: Helm deploy django
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: $(namespace)
              command: upgrade
              chartType: filepath
              chartPath: django/helm
              releaseName: invent-django
              install: true
              waitForExecution: false
#              overrideValues: |
#                environment='development'
#                lifecycle=$lifecycle
#                instance=$envPrefix_fixed
              arguments: >
                --set environment='development'
                --set lifecycle=$(lifecycle)
                --set instance=$(branchNameFixed)